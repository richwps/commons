/*
* generated by Xtext
*/
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.hsos.richwps.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.hsos.richwps.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.hsos.richwps.services.DSLGrammarAccess;

}

@parser::members {
 
 	private DSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleWorksequence
entryRuleWorksequence 
:
{ before(grammarAccess.getWorksequenceRule()); }
	 ruleWorksequence
{ after(grammarAccess.getWorksequenceRule()); } 
	 EOF 
;

// Rule Worksequence
ruleWorksequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWorksequenceAccess().getOperationsAssignment()); }
(rule__Worksequence__OperationsAssignment)*
{ after(grammarAccess.getWorksequenceAccess().getOperationsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getAlternatives()); }
(rule__Operation__Alternatives)
{ after(grammarAccess.getOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalBinding
entryRuleLocalBinding 
:
{ before(grammarAccess.getLocalBindingRule()); }
	 ruleLocalBinding
{ after(grammarAccess.getLocalBindingRule()); } 
	 EOF 
;

// Rule LocalBinding
ruleLocalBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalBindingAccess().getGroup()); }
(rule__LocalBinding__Group__0)
{ after(grammarAccess.getLocalBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRemoteBinding
entryRuleRemoteBinding 
:
{ before(grammarAccess.getRemoteBindingRule()); }
	 ruleRemoteBinding
{ after(grammarAccess.getRemoteBindingRule()); } 
	 EOF 
;

// Rule RemoteBinding
ruleRemoteBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRemoteBindingAccess().getGroup()); }
(rule__RemoteBinding__Group__0)
{ after(grammarAccess.getRemoteBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecuteStatement
entryRuleExecuteStatement 
:
{ before(grammarAccess.getExecuteStatementRule()); }
	 ruleExecuteStatement
{ after(grammarAccess.getExecuteStatementRule()); } 
	 EOF 
;

// Rule ExecuteStatement
ruleExecuteStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecuteStatementAccess().getGroup()); }
(rule__ExecuteStatement__Group__0)
{ after(grammarAccess.getExecuteStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecInput
entryRuleExecInput 
:
{ before(grammarAccess.getExecInputRule()); }
	 ruleExecInput
{ after(grammarAccess.getExecInputRule()); } 
	 EOF 
;

// Rule ExecInput
ruleExecInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecInputAccess().getAlternatives()); }
(rule__ExecInput__Alternatives)
{ after(grammarAccess.getExecInputAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecOutput
entryRuleExecOutput 
:
{ before(grammarAccess.getExecOutputRule()); }
	 ruleExecOutput
{ after(grammarAccess.getExecOutputRule()); } 
	 EOF 
;

// Rule ExecOutput
ruleExecOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecOutputAccess().getAlternatives()); }
(rule__ExecOutput__Alternatives)
{ after(grammarAccess.getExecOutputAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getAlternatives()); }
(rule__Assignment__Alternatives)
{ after(grammarAccess.getAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIN_REFERENCE
entryRuleIN_REFERENCE 
:
{ before(grammarAccess.getIN_REFERENCERule()); }
	 ruleIN_REFERENCE
{ after(grammarAccess.getIN_REFERENCERule()); } 
	 EOF 
;

// Rule IN_REFERENCE
ruleIN_REFERENCE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIN_REFERENCEAccess().getGroup()); }
(rule__IN_REFERENCE__Group__0)
{ after(grammarAccess.getIN_REFERENCEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOUT_REFERENCE
entryRuleOUT_REFERENCE 
:
{ before(grammarAccess.getOUT_REFERENCERule()); }
	 ruleOUT_REFERENCE
{ after(grammarAccess.getOUT_REFERENCERule()); } 
	 EOF 
;

// Rule OUT_REFERENCE
ruleOUT_REFERENCE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOUT_REFERENCEAccess().getGroup()); }
(rule__OUT_REFERENCE__Group__0)
{ after(grammarAccess.getOUT_REFERENCEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVAR_REFERENCE
entryRuleVAR_REFERENCE 
:
{ before(grammarAccess.getVAR_REFERENCERule()); }
	 ruleVAR_REFERENCE
{ after(grammarAccess.getVAR_REFERENCERule()); } 
	 EOF 
;

// Rule VAR_REFERENCE
ruleVAR_REFERENCE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVAR_REFERENCEAccess().getGroup()); }
(rule__VAR_REFERENCE__Group__0)
{ after(grammarAccess.getVAR_REFERENCEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQUALIFIEDNAME
entryRuleQUALIFIEDNAME 
:
{ before(grammarAccess.getQUALIFIEDNAMERule()); }
	 ruleQUALIFIEDNAME
{ after(grammarAccess.getQUALIFIEDNAMERule()); } 
	 EOF 
;

// Rule QUALIFIEDNAME
ruleQUALIFIEDNAME
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQUALIFIEDNAMEAccess().getGroup()); }
(rule__QUALIFIEDNAME__Group__0)
{ after(grammarAccess.getQUALIFIEDNAMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQUALIFIEDID
entryRuleQUALIFIEDID 
:
{ before(grammarAccess.getQUALIFIEDIDRule()); }
	 ruleQUALIFIEDID
{ after(grammarAccess.getQUALIFIEDIDRule()); } 
	 EOF 
;

// Rule QUALIFIEDID
ruleQUALIFIEDID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getGroup()); }
(rule__QUALIFIEDID__Group__0)
{ after(grammarAccess.getQUALIFIEDIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleURI
entryRuleURI 
:
{ before(grammarAccess.getURIRule()); }
	 ruleURI
{ after(grammarAccess.getURIRule()); } 
	 EOF 
;

// Rule URI
ruleURI
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getURIAccess().getGroup()); }
(rule__URI__Group__0)*
{ after(grammarAccess.getURIAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Operation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLocalBindingParserRuleCall_0()); }
	ruleLocalBinding
{ after(grammarAccess.getOperationAccess().getLocalBindingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getRemoteBindingParserRuleCall_1()); }
	ruleRemoteBinding
{ after(grammarAccess.getOperationAccess().getRemoteBindingParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getAssignmentParserRuleCall_2()); }
	ruleAssignment
{ after(grammarAccess.getOperationAccess().getAssignmentParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getExecuteStatementParserRuleCall_3()); }
	ruleExecuteStatement
{ after(grammarAccess.getOperationAccess().getExecuteStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getIfStatementParserRuleCall_4()); }
	ruleIfStatement
{ after(grammarAccess.getOperationAccess().getIfStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getGroup_0()); }
(rule__ExecInput__Group_0__0)
{ after(grammarAccess.getExecInputAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExecInputAccess().getGroup_1()); }
(rule__ExecInput__Group_1__0)
{ after(grammarAccess.getExecInputAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getGroup_0()); }
(rule__ExecOutput__Group_0__0)
{ after(grammarAccess.getExecOutputAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExecOutputAccess().getGroup_1()); }
(rule__ExecOutput__Group_1__0)
{ after(grammarAccess.getExecOutputAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_0()); }
(rule__IfStatement__Group_1_0__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_1()); }
(rule__IfStatement__Group_1_1__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_2()); }
(rule__IfStatement__Group_1_2__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_3()); }
(rule__IfStatement__Group_1_3__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_3()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_4()); }
(rule__IfStatement__Group_1_4__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_4()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_5()); }
(rule__IfStatement__Group_1_5__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_5()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_6()); }
(rule__IfStatement__Group_1_6__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_6()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_7()); }
(rule__IfStatement__Group_1_7__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_7()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_8()); }
(rule__IfStatement__Group_1_8__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_8()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_9()); }
(rule__IfStatement__Group_1_9__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_9()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getGroup_1_10()); }
(rule__IfStatement__Group_1_10__0)
{ after(grammarAccess.getIfStatementAccess().getGroup_1_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__IfoperationsAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfoperationsAssignmentParserRuleCall_2_0_0()); }
	ruleAssignment
{ after(grammarAccess.getIfStatementAccess().getIfoperationsAssignmentParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getIfoperationsExecuteStatementParserRuleCall_2_0_1()); }
	ruleExecuteStatement
{ after(grammarAccess.getIfStatementAccess().getIfoperationsExecuteStatementParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseoperationsAlternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseoperationsAssignmentParserRuleCall_3_1_0_0()); }
	ruleAssignment
{ after(grammarAccess.getIfStatementAccess().getElseoperationsAssignmentParserRuleCall_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getIfStatementAccess().getElseoperationsExecuteStatementParserRuleCall_3_1_0_1()); }
	ruleExecuteStatement
{ after(grammarAccess.getIfStatementAccess().getElseoperationsExecuteStatementParserRuleCall_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_0()); }
(rule__Assignment__Group_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getGroup_1()); }
(rule__Assignment__Group_1__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getGroup_2()); }
(rule__Assignment__Group_2__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getGroup_3()); }
(rule__Assignment__Group_3__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__LocalBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalBinding__Group__0__Impl
	rule__LocalBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalBindingAccess().getBindKeyword_0()); }

	'bind' 

{ after(grammarAccess.getLocalBindingAccess().getBindKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalBinding__Group__1__Impl
	rule__LocalBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalBindingAccess().getProcessKeyword_1()); }

	'process' 

{ after(grammarAccess.getLocalBindingAccess().getProcessKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalBinding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalBinding__Group__2__Impl
	rule__LocalBinding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalBinding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalBindingAccess().getProcessidAssignment_2()); }
(rule__LocalBinding__ProcessidAssignment_2)
{ after(grammarAccess.getLocalBindingAccess().getProcessidAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalBinding__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalBinding__Group__3__Impl
	rule__LocalBinding__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalBinding__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalBindingAccess().getToKeyword_3()); }

	'to' 

{ after(grammarAccess.getLocalBindingAccess().getToKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalBinding__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalBinding__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalBinding__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalBindingAccess().getHandleAssignment_4()); }
(rule__LocalBinding__HandleAssignment_4)
{ after(grammarAccess.getLocalBindingAccess().getHandleAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RemoteBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__0__Impl
	rule__RemoteBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getBindKeyword_0()); }

	'bind' 

{ after(grammarAccess.getRemoteBindingAccess().getBindKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoteBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__1__Impl
	rule__RemoteBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getProcessKeyword_1()); }

	'process' 

{ after(grammarAccess.getRemoteBindingAccess().getProcessKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoteBinding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__2__Impl
	rule__RemoteBinding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getProtocolAssignment_2()); }
(rule__RemoteBinding__ProtocolAssignment_2)
{ after(grammarAccess.getRemoteBindingAccess().getProtocolAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoteBinding__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__3__Impl
	rule__RemoteBinding__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getHostAssignment_3()); }
(rule__RemoteBinding__HostAssignment_3)
{ after(grammarAccess.getRemoteBindingAccess().getHostAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoteBinding__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__4__Impl
	rule__RemoteBinding__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getPortAssignment_4()); }
(rule__RemoteBinding__PortAssignment_4)
{ after(grammarAccess.getRemoteBindingAccess().getPortAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoteBinding__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__5__Impl
	rule__RemoteBinding__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getPathAssignment_5()); }
(rule__RemoteBinding__PathAssignment_5)
{ after(grammarAccess.getRemoteBindingAccess().getPathAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoteBinding__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__6__Impl
	rule__RemoteBinding__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getProcessidAssignment_6()); }
(rule__RemoteBinding__ProcessidAssignment_6)
{ after(grammarAccess.getRemoteBindingAccess().getProcessidAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoteBinding__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__7__Impl
	rule__RemoteBinding__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getToKeyword_7()); }

	'to' 

{ after(grammarAccess.getRemoteBindingAccess().getToKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoteBinding__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoteBinding__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getHandleAssignment_8()); }
(rule__RemoteBinding__HandleAssignment_8)
{ after(grammarAccess.getRemoteBindingAccess().getHandleAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ExecuteStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecuteStatement__Group__0__Impl
	rule__ExecuteStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getExecuteKeyword_0()); }

	'execute' 

{ after(grammarAccess.getExecuteStatementAccess().getExecuteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecuteStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecuteStatement__Group__1__Impl
	rule__ExecuteStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getHandleAssignment_1()); }
(rule__ExecuteStatement__HandleAssignment_1)
{ after(grammarAccess.getExecuteStatementAccess().getHandleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecuteStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecuteStatement__Group__2__Impl
	rule__ExecuteStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getWithKeyword_2()); }

	'with' 

{ after(grammarAccess.getExecuteStatementAccess().getWithKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecuteStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecuteStatement__Group__3__Impl
	rule__ExecuteStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getExecinputsAssignment_3()); }
(rule__ExecuteStatement__ExecinputsAssignment_3)*
{ after(grammarAccess.getExecuteStatementAccess().getExecinputsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecuteStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecuteStatement__Group__4__Impl
	rule__ExecuteStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getStoreKeyword_4()); }

	'store' 

{ after(grammarAccess.getExecuteStatementAccess().getStoreKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecuteStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecuteStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getExecoutputsAssignment_5()); }
(rule__ExecuteStatement__ExecoutputsAssignment_5)*
{ after(grammarAccess.getExecuteStatementAccess().getExecoutputsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExecInput__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecInput__Group_0__0__Impl
	rule__ExecInput__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getReferenceAssignment_0_0()); }
(rule__ExecInput__ReferenceAssignment_0_0)
{ after(grammarAccess.getExecInputAccess().getReferenceAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecInput__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecInput__Group_0__1__Impl
	rule__ExecInput__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getAsKeyword_0_1()); }

	'as' 

{ after(grammarAccess.getExecInputAccess().getAsKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecInput__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecInput__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getWpsidAssignment_0_2()); }
(rule__ExecInput__WpsidAssignment_0_2)
{ after(grammarAccess.getExecInputAccess().getWpsidAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExecInput__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecInput__Group_1__0__Impl
	rule__ExecInput__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getReferenceAssignment_1_0()); }
(rule__ExecInput__ReferenceAssignment_1_0)
{ after(grammarAccess.getExecInputAccess().getReferenceAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecInput__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecInput__Group_1__1__Impl
	rule__ExecInput__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getAsKeyword_1_1()); }

	'as' 

{ after(grammarAccess.getExecInputAccess().getAsKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecInput__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecInput__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getWpsidAssignment_1_2()); }
(rule__ExecInput__WpsidAssignment_1_2)
{ after(grammarAccess.getExecInputAccess().getWpsidAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExecOutput__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecOutput__Group_0__0__Impl
	rule__ExecOutput__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getWpsidAssignment_0_0()); }
(rule__ExecOutput__WpsidAssignment_0_0)
{ after(grammarAccess.getExecOutputAccess().getWpsidAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecOutput__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecOutput__Group_0__1__Impl
	rule__ExecOutput__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getAsKeyword_0_1()); }

	'as' 

{ after(grammarAccess.getExecOutputAccess().getAsKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecOutput__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecOutput__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getReferenceAssignment_0_2()); }
(rule__ExecOutput__ReferenceAssignment_0_2)
{ after(grammarAccess.getExecOutputAccess().getReferenceAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExecOutput__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecOutput__Group_1__0__Impl
	rule__ExecOutput__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getWpsidAssignment_1_0()); }
(rule__ExecOutput__WpsidAssignment_1_0)
{ after(grammarAccess.getExecOutputAccess().getWpsidAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecOutput__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecOutput__Group_1__1__Impl
	rule__ExecOutput__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getAsKeyword_1_1()); }

	'as' 

{ after(grammarAccess.getExecOutputAccess().getAsKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecOutput__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecOutput__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getReferenceAssignment_1_2()); }
(rule__ExecOutput__ReferenceAssignment_1_2)
{ after(grammarAccess.getExecOutputAccess().getReferenceAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getAlternatives_1()); }
(rule__IfStatement__Alternatives_1)
{ after(grammarAccess.getIfStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfoperationsAssignment_2()); }
(rule__IfStatement__IfoperationsAssignment_2)*
{ after(grammarAccess.getIfStatementAccess().getIfoperationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_3()); }
(rule__IfStatement__Group_3__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getIfStatementAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IfStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_0__0__Impl
	rule__IfStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_0_0()); }
(rule__IfStatement__LefthandAssignment_1_0_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_0__1__Impl
	rule__IfStatement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_0_1()); }
(rule__IfStatement__OperatorAssignment_1_0_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_0_2()); }
(rule__IfStatement__RighthandAssignment_1_0_2)
{ after(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_1__0__Impl
	rule__IfStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_1_0()); }
(rule__IfStatement__LefthandAssignment_1_1_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_1__1__Impl
	rule__IfStatement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_1_1()); }
(rule__IfStatement__OperatorAssignment_1_1_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_sAssignment_1_1_2()); }
(rule__IfStatement__Val_sAssignment_1_1_2)
{ after(grammarAccess.getIfStatementAccess().getVal_sAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_2__0__Impl
	rule__IfStatement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_2_0()); }
(rule__IfStatement__LefthandAssignment_1_2_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_2__1__Impl
	rule__IfStatement__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_2_1()); }
(rule__IfStatement__OperatorAssignment_1_2_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_iAssignment_1_2_2()); }
(rule__IfStatement__Val_iAssignment_1_2_2)
{ after(grammarAccess.getIfStatementAccess().getVal_iAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_3__0__Impl
	rule__IfStatement__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_3_0()); }
(rule__IfStatement__LefthandAssignment_1_3_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_3__1__Impl
	rule__IfStatement__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_3_1()); }
(rule__IfStatement__OperatorAssignment_1_3_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_3_2()); }
(rule__IfStatement__RighthandAssignment_1_3_2)
{ after(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_4__0__Impl
	rule__IfStatement__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_4_0()); }
(rule__IfStatement__LefthandAssignment_1_4_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_4__1__Impl
	rule__IfStatement__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_4_1()); }
(rule__IfStatement__OperatorAssignment_1_4_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_4_2()); }
(rule__IfStatement__RighthandAssignment_1_4_2)
{ after(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_5__0__Impl
	rule__IfStatement__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_5_0()); }
(rule__IfStatement__LefthandAssignment_1_5_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_5__1__Impl
	rule__IfStatement__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_5_1()); }
(rule__IfStatement__OperatorAssignment_1_5_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_sAssignment_1_5_2()); }
(rule__IfStatement__Val_sAssignment_1_5_2)
{ after(grammarAccess.getIfStatementAccess().getVal_sAssignment_1_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_6__0__Impl
	rule__IfStatement__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_6_0()); }
(rule__IfStatement__LefthandAssignment_1_6_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_6__1__Impl
	rule__IfStatement__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_6_1()); }
(rule__IfStatement__OperatorAssignment_1_6_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_iAssignment_1_6_2()); }
(rule__IfStatement__Val_iAssignment_1_6_2)
{ after(grammarAccess.getIfStatementAccess().getVal_iAssignment_1_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_7__0__Impl
	rule__IfStatement__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_7_0()); }
(rule__IfStatement__LefthandAssignment_1_7_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_7__1__Impl
	rule__IfStatement__Group_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_7_1()); }
(rule__IfStatement__OperatorAssignment_1_7_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_7_2()); }
(rule__IfStatement__RighthandAssignment_1_7_2)
{ after(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_8__0__Impl
	rule__IfStatement__Group_1_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_8_0()); }
(rule__IfStatement__LefthandAssignment_1_8_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_8__1__Impl
	rule__IfStatement__Group_1_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_8_1()); }
(rule__IfStatement__OperatorAssignment_1_8_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_8_2()); }
(rule__IfStatement__RighthandAssignment_1_8_2)
{ after(grammarAccess.getIfStatementAccess().getRighthandAssignment_1_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_9__0__Impl
	rule__IfStatement__Group_1_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_9_0()); }
(rule__IfStatement__LefthandAssignment_1_9_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_9__1__Impl
	rule__IfStatement__Group_1_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_9_1()); }
(rule__IfStatement__OperatorAssignment_1_9_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_sAssignment_1_9_2()); }
(rule__IfStatement__Val_sAssignment_1_9_2)
{ after(grammarAccess.getIfStatementAccess().getVal_sAssignment_1_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_1_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_10__0__Impl
	rule__IfStatement__Group_1_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_10_0()); }
(rule__IfStatement__LefthandAssignment_1_10_0)
{ after(grammarAccess.getIfStatementAccess().getLefthandAssignment_1_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_10__1__Impl
	rule__IfStatement__Group_1_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_10_1()); }
(rule__IfStatement__OperatorAssignment_1_10_1)
{ after(grammarAccess.getIfStatementAccess().getOperatorAssignment_1_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_1_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_1_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_1_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_iAssignment_1_10_2()); }
(rule__IfStatement__Val_iAssignment_1_10_2)
{ after(grammarAccess.getIfStatementAccess().getVal_iAssignment_1_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_3__0__Impl
	rule__IfStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_3_0()); }

	'else' 

{ after(grammarAccess.getIfStatementAccess().getElseKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseoperationsAssignment_3_1()); }
(rule__IfStatement__ElseoperationsAssignment_3_1)*
{ after(grammarAccess.getIfStatementAccess().getElseoperationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__0__Impl
	rule__Assignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLefthandAssignment_0_0()); }
(rule__Assignment__LefthandAssignment_0_0)
{ after(grammarAccess.getAssignmentAccess().getLefthandAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__1__Impl
	rule__Assignment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_0_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRighthandAssignment_0_2()); }
(rule__Assignment__RighthandAssignment_0_2)
{ after(grammarAccess.getAssignmentAccess().getRighthandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__0__Impl
	rule__Assignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLefthandAssignment_1_0()); }
(rule__Assignment__LefthandAssignment_1_0)
{ after(grammarAccess.getAssignmentAccess().getLefthandAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__1__Impl
	rule__Assignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRighthandAssignment_1_2()); }
(rule__Assignment__RighthandAssignment_1_2)
{ after(grammarAccess.getAssignmentAccess().getRighthandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__0__Impl
	rule__Assignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLefthandAssignment_2_0()); }
(rule__Assignment__LefthandAssignment_2_0)
{ after(grammarAccess.getAssignmentAccess().getLefthandAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__1__Impl
	rule__Assignment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVal_sAssignment_2_2()); }
(rule__Assignment__Val_sAssignment_2_2)
{ after(grammarAccess.getAssignmentAccess().getVal_sAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_3__0__Impl
	rule__Assignment__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLefthandAssignment_3_0()); }
(rule__Assignment__LefthandAssignment_3_0)
{ after(grammarAccess.getAssignmentAccess().getLefthandAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_3__1__Impl
	rule__Assignment__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_3_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVal_iAssignment_3_2()); }
(rule__Assignment__Val_iAssignment_3_2)
{ after(grammarAccess.getAssignmentAccess().getVal_iAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IN_REFERENCE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IN_REFERENCE__Group__0__Impl
	rule__IN_REFERENCE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IN_REFERENCE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIN_REFERENCEAccess().getIN_REFERENCE_HANDLETerminalRuleCall_0()); }
	RULE_IN_REFERENCE_HANDLE
{ after(grammarAccess.getIN_REFERENCEAccess().getIN_REFERENCE_HANDLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IN_REFERENCE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IN_REFERENCE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IN_REFERENCE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIN_REFERENCEAccess().getRefnameAssignment_1()); }
(rule__IN_REFERENCE__RefnameAssignment_1)
{ after(grammarAccess.getIN_REFERENCEAccess().getRefnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OUT_REFERENCE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OUT_REFERENCE__Group__0__Impl
	rule__OUT_REFERENCE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OUT_REFERENCE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOUT_REFERENCEAccess().getOUT_REFERENCE_HANDLETerminalRuleCall_0()); }
	RULE_OUT_REFERENCE_HANDLE
{ after(grammarAccess.getOUT_REFERENCEAccess().getOUT_REFERENCE_HANDLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OUT_REFERENCE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OUT_REFERENCE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OUT_REFERENCE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOUT_REFERENCEAccess().getRefnameAssignment_1()); }
(rule__OUT_REFERENCE__RefnameAssignment_1)
{ after(grammarAccess.getOUT_REFERENCEAccess().getRefnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VAR_REFERENCE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_REFERENCE__Group__0__Impl
	rule__VAR_REFERENCE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_REFERENCE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_REFERENCEAccess().getVAR_REFERENCE_HANDLETerminalRuleCall_0()); }
	RULE_VAR_REFERENCE_HANDLE
{ after(grammarAccess.getVAR_REFERENCEAccess().getVAR_REFERENCE_HANDLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VAR_REFERENCE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_REFERENCE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_REFERENCE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_REFERENCEAccess().getRefnameAssignment_1()); }
(rule__VAR_REFERENCE__RefnameAssignment_1)
{ after(grammarAccess.getVAR_REFERENCEAccess().getRefnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIEDNAME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDNAME__Group__0__Impl
	rule__QUALIFIEDNAME__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDNAME__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDNAMEAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIEDNAMEAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIEDNAME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDNAME__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDNAME__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDNAMEAccess().getGroup_1()); }
(rule__QUALIFIEDNAME__Group_1__0)*
{ after(grammarAccess.getQUALIFIEDNAMEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIEDNAME__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDNAME__Group_1__0__Impl
	rule__QUALIFIEDNAME__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDNAME__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDNAMEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQUALIFIEDNAMEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIEDNAME__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDNAME__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDNAME__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDNAMEAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIEDNAMEAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIEDID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDID__Group__0__Impl
	rule__QUALIFIEDID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIEDIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIEDID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getGroup_1()); }
(rule__QUALIFIEDID__Group_1__0)*
{ after(grammarAccess.getQUALIFIEDIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIEDID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDID__Group_1__0__Impl
	rule__QUALIFIEDID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getQUALIFIEDIDAccess().getSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIEDID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIEDID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIEDID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIEDIDAccess().getQUALIFIEDNAMEParserRuleCall_1_1()); }
	ruleQUALIFIEDNAME
{ after(grammarAccess.getQUALIFIEDIDAccess().getQUALIFIEDNAMEParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__URI__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URI__Group__0__Impl
	rule__URI__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URI__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURIAccess().getSolidusKeyword_0()); }

	'/' 

{ after(grammarAccess.getURIAccess().getSolidusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URI__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URI__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URI__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURIAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getURIAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Worksequence__OperationsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorksequenceAccess().getOperationsOperationParserRuleCall_0()); }
	ruleOperation{ after(grammarAccess.getWorksequenceAccess().getOperationsOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalBinding__ProcessidAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalBindingAccess().getProcessidQUALIFIEDNAMEParserRuleCall_2_0()); }
	ruleQUALIFIEDNAME{ after(grammarAccess.getLocalBindingAccess().getProcessidQUALIFIEDNAMEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalBinding__HandleAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalBindingAccess().getHandleQUALIFIEDIDParserRuleCall_4_0()); }
	ruleQUALIFIEDID{ after(grammarAccess.getLocalBindingAccess().getHandleQUALIFIEDIDParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__ProtocolAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getProtocolPROTOCOLTerminalRuleCall_2_0()); }
	RULE_PROTOCOL{ after(grammarAccess.getRemoteBindingAccess().getProtocolPROTOCOLTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__HostAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getHostQUALIFIEDNAMEParserRuleCall_3_0()); }
	ruleQUALIFIEDNAME{ after(grammarAccess.getRemoteBindingAccess().getHostQUALIFIEDNAMEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__PortAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getPortINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getRemoteBindingAccess().getPortINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__PathAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getPathURIParserRuleCall_5_0()); }
	ruleURI{ after(grammarAccess.getRemoteBindingAccess().getPathURIParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__ProcessidAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getProcessidQUALIFIEDNAMEParserRuleCall_6_0()); }
	ruleQUALIFIEDNAME{ after(grammarAccess.getRemoteBindingAccess().getProcessidQUALIFIEDNAMEParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoteBinding__HandleAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoteBindingAccess().getHandleQUALIFIEDIDParserRuleCall_8_0()); }
	ruleQUALIFIEDID{ after(grammarAccess.getRemoteBindingAccess().getHandleQUALIFIEDIDParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__HandleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getHandleQUALIFIEDIDParserRuleCall_1_0()); }
	ruleQUALIFIEDID{ after(grammarAccess.getExecuteStatementAccess().getHandleQUALIFIEDIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__ExecinputsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getExecinputsExecInputParserRuleCall_3_0()); }
	ruleExecInput{ after(grammarAccess.getExecuteStatementAccess().getExecinputsExecInputParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteStatement__ExecoutputsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecuteStatementAccess().getExecoutputsExecOutputParserRuleCall_5_0()); }
	ruleExecOutput{ after(grammarAccess.getExecuteStatementAccess().getExecoutputsExecOutputParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__ReferenceAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getReferenceIN_REFERENCEParserRuleCall_0_0_0()); }
	ruleIN_REFERENCE{ after(grammarAccess.getExecInputAccess().getReferenceIN_REFERENCEParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__WpsidAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getWpsidIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getExecInputAccess().getWpsidIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__ReferenceAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getReferenceVAR_REFERENCEParserRuleCall_1_0_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getExecInputAccess().getReferenceVAR_REFERENCEParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecInput__WpsidAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecInputAccess().getWpsidIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getExecInputAccess().getWpsidIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__WpsidAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getWpsidIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getExecOutputAccess().getWpsidIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__ReferenceAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getReferenceOUT_REFERENCEParserRuleCall_0_2_0()); }
	ruleOUT_REFERENCE{ after(grammarAccess.getExecOutputAccess().getReferenceOUT_REFERENCEParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__WpsidAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getWpsidIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getExecOutputAccess().getWpsidIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecOutput__ReferenceAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecOutputAccess().getReferenceVAR_REFERENCEParserRuleCall_1_2_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getExecOutputAccess().getReferenceVAR_REFERENCEParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_0_0_0()); }
	ruleIN_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_0_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__RighthandAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_0_2_0()); }
	ruleIN_REFERENCE{ after(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_1_0_0()); }
	ruleIN_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Val_sAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_2_0_0()); }
	ruleIN_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_2_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Val_iAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_2_2_0()); }
	RULE_INT{ after(grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_3_0_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_3_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__RighthandAssignment_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_3_2_0()); }
	ruleIN_REFERENCE{ after(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_4_0_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_4_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__RighthandAssignment_1_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandVAR_REFERENCEParserRuleCall_1_4_2_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getIfStatementAccess().getRighthandVAR_REFERENCEParserRuleCall_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_5_0_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_5_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Val_sAssignment_1_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_5_2_0()); }
	RULE_STRING{ after(grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_6_0_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_6_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Val_iAssignment_1_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_6_2_0()); }
	RULE_INT{ after(grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_7_0_0()); }
	ruleOUT_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_7_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__RighthandAssignment_1_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_7_2_0()); }
	ruleIN_REFERENCE{ after(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_8_0_0()); }
	ruleOUT_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_8_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__RighthandAssignment_1_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRighthandVAR_REFERENCEParserRuleCall_1_8_2_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getIfStatementAccess().getRighthandVAR_REFERENCEParserRuleCall_1_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_9_0_0()); }
	ruleOUT_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_9_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Val_sAssignment_1_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_9_2_0()); }
	RULE_STRING{ after(grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__LefthandAssignment_1_10_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_10_0_0()); }
	ruleOUT_REFERENCE{ after(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_10_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__OperatorAssignment_1_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_10_1_0()); }
	RULE_ID{ after(grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Val_iAssignment_1_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_10_2_0()); }
	RULE_INT{ after(grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__IfoperationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfoperationsAlternatives_2_0()); }
(rule__IfStatement__IfoperationsAlternatives_2_0)
{ after(grammarAccess.getIfStatementAccess().getIfoperationsAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseoperationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseoperationsAlternatives_3_1_0()); }
(rule__IfStatement__ElseoperationsAlternatives_3_1_0)
{ after(grammarAccess.getIfStatementAccess().getElseoperationsAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LefthandAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLefthandOUT_REFERENCEParserRuleCall_0_0_0()); }
	ruleOUT_REFERENCE{ after(grammarAccess.getAssignmentAccess().getLefthandOUT_REFERENCEParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RighthandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRighthandIN_REFERENCEParserRuleCall_0_2_0()); }
	ruleIN_REFERENCE{ after(grammarAccess.getAssignmentAccess().getRighthandIN_REFERENCEParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LefthandAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLefthandOUT_REFERENCEParserRuleCall_1_0_0()); }
	ruleOUT_REFERENCE{ after(grammarAccess.getAssignmentAccess().getLefthandOUT_REFERENCEParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RighthandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRighthandVAR_REFERENCEParserRuleCall_1_2_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getAssignmentAccess().getRighthandVAR_REFERENCEParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LefthandAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLefthandVAR_REFERENCEParserRuleCall_2_0_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getAssignmentAccess().getLefthandVAR_REFERENCEParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Val_sAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVal_sSTRINGTerminalRuleCall_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getAssignmentAccess().getVal_sSTRINGTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LefthandAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLefthandVAR_REFERENCEParserRuleCall_3_0_0()); }
	ruleVAR_REFERENCE{ after(grammarAccess.getAssignmentAccess().getLefthandVAR_REFERENCEParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Val_iAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVal_iINTTerminalRuleCall_3_2_0()); }
	RULE_INT{ after(grammarAccess.getAssignmentAccess().getVal_iINTTerminalRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IN_REFERENCE__RefnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIN_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIN_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OUT_REFERENCE__RefnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOUT_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOUT_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_REFERENCE__RefnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVAR_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_IN_REFERENCE_HANDLE : ('in.'|'IN.');

RULE_VAR_REFERENCE_HANDLE : ('var.'|'VAR.');

RULE_OUT_REFERENCE_HANDLE : ('out.'|'OUT.');

RULE_PROTOCOL : ('http'|'https');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'-') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


