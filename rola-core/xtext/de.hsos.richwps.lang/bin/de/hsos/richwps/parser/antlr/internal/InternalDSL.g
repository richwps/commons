/*
* generated by Xtext
*/
grammar InternalDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.hsos.richwps.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.hsos.richwps.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.hsos.richwps.services.DSLGrammarAccess;

}

@parser::members {

 	private DSLGrammarAccess grammarAccess;
 	
    public InternalDSLParser(TokenStream input, DSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Worksequence";	
   	}
   	
   	@Override
   	protected DSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleWorksequence
entryRuleWorksequence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorksequenceRule()); }
	 iv_ruleWorksequence=ruleWorksequence 
	 { $current=$iv_ruleWorksequence.current; } 
	 EOF 
;

// Rule Worksequence
ruleWorksequence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getWorksequenceAccess().getOperationsOperationParserRuleCall_0()); 
	    }
		lv_operations_0_0=ruleOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorksequenceRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_0_0, 
        		"Operation");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	 iv_ruleOperation=ruleOperation 
	 { $current=$iv_ruleOperation.current; } 
	 EOF 
;

// Rule Operation
ruleOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOperationAccess().getLocalBindingParserRuleCall_0()); 
    }
    this_LocalBinding_0=ruleLocalBinding
    { 
        $current = $this_LocalBinding_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationAccess().getRemoteBindingParserRuleCall_1()); 
    }
    this_RemoteBinding_1=ruleRemoteBinding
    { 
        $current = $this_RemoteBinding_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationAccess().getAssignmentParserRuleCall_2()); 
    }
    this_Assignment_2=ruleAssignment
    { 
        $current = $this_Assignment_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationAccess().getExecuteStatementParserRuleCall_3()); 
    }
    this_ExecuteStatement_3=ruleExecuteStatement
    { 
        $current = $this_ExecuteStatement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationAccess().getIfStatementParserRuleCall_4()); 
    }
    this_IfStatement_4=ruleIfStatement
    { 
        $current = $this_IfStatement_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLocalBinding
entryRuleLocalBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalBindingRule()); }
	 iv_ruleLocalBinding=ruleLocalBinding 
	 { $current=$iv_ruleLocalBinding.current; } 
	 EOF 
;

// Rule LocalBinding
ruleLocalBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='bind' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLocalBindingAccess().getBindKeyword_0());
    }
	otherlv_1='process' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLocalBindingAccess().getProcessKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalBindingAccess().getProcessidQUALIFIEDNAMEParserRuleCall_2_0()); 
	    }
		lv_processid_2_0=ruleQUALIFIEDNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalBindingRule());
	        }
       		set(
       			$current, 
       			"processid",
        		lv_processid_2_0, 
        		"QUALIFIEDNAME");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='to' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLocalBindingAccess().getToKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalBindingAccess().getHandleQUALIFIEDIDParserRuleCall_4_0()); 
	    }
		lv_handle_4_0=ruleQUALIFIEDID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalBindingRule());
	        }
       		set(
       			$current, 
       			"handle",
        		lv_handle_4_0, 
        		"QUALIFIEDID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRemoteBinding
entryRuleRemoteBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoteBindingRule()); }
	 iv_ruleRemoteBinding=ruleRemoteBinding 
	 { $current=$iv_ruleRemoteBinding.current; } 
	 EOF 
;

// Rule RemoteBinding
ruleRemoteBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='bind' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRemoteBindingAccess().getBindKeyword_0());
    }
	otherlv_1='process' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRemoteBindingAccess().getProcessKeyword_1());
    }
(
(
		lv_protocol_2_0=RULE_PROTOCOL
		{
			newLeafNode(lv_protocol_2_0, grammarAccess.getRemoteBindingAccess().getProtocolPROTOCOLTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoteBindingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"protocol",
        		lv_protocol_2_0, 
        		"PROTOCOL");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoteBindingAccess().getHostQUALIFIEDNAMEParserRuleCall_3_0()); 
	    }
		lv_host_3_0=ruleQUALIFIEDNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoteBindingRule());
	        }
       		set(
       			$current, 
       			"host",
        		lv_host_3_0, 
        		"QUALIFIEDNAME");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_port_4_0=RULE_INT
		{
			newLeafNode(lv_port_4_0, grammarAccess.getRemoteBindingAccess().getPortINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoteBindingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"port",
        		lv_port_4_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoteBindingAccess().getPathURIParserRuleCall_5_0()); 
	    }
		lv_path_5_0=ruleURI		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoteBindingRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_5_0, 
        		"URI");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoteBindingAccess().getProcessidQUALIFIEDNAMEParserRuleCall_6_0()); 
	    }
		lv_processid_6_0=ruleQUALIFIEDNAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoteBindingRule());
	        }
       		set(
       			$current, 
       			"processid",
        		lv_processid_6_0, 
        		"QUALIFIEDNAME");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='to' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRemoteBindingAccess().getToKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRemoteBindingAccess().getHandleQUALIFIEDIDParserRuleCall_8_0()); 
	    }
		lv_handle_8_0=ruleQUALIFIEDID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRemoteBindingRule());
	        }
       		set(
       			$current, 
       			"handle",
        		lv_handle_8_0, 
        		"QUALIFIEDID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExecuteStatement
entryRuleExecuteStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExecuteStatementRule()); }
	 iv_ruleExecuteStatement=ruleExecuteStatement 
	 { $current=$iv_ruleExecuteStatement.current; } 
	 EOF 
;

// Rule ExecuteStatement
ruleExecuteStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='execute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExecuteStatementAccess().getExecuteKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecuteStatementAccess().getHandleQUALIFIEDIDParserRuleCall_1_0()); 
	    }
		lv_handle_1_0=ruleQUALIFIEDID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecuteStatementRule());
	        }
       		set(
       			$current, 
       			"handle",
        		lv_handle_1_0, 
        		"QUALIFIEDID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='with' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExecuteStatementAccess().getWithKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecuteStatementAccess().getExecinputsExecInputParserRuleCall_3_0()); 
	    }
		lv_execinputs_3_0=ruleExecInput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecuteStatementRule());
	        }
       		add(
       			$current, 
       			"execinputs",
        		lv_execinputs_3_0, 
        		"ExecInput");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='store' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExecuteStatementAccess().getStoreKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecuteStatementAccess().getExecoutputsExecOutputParserRuleCall_5_0()); 
	    }
		lv_execoutputs_5_0=ruleExecOutput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecuteStatementRule());
	        }
       		add(
       			$current, 
       			"execoutputs",
        		lv_execoutputs_5_0, 
        		"ExecOutput");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleExecInput
entryRuleExecInput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExecInputRule()); }
	 iv_ruleExecInput=ruleExecInput 
	 { $current=$iv_ruleExecInput.current; } 
	 EOF 
;

// Rule ExecInput
ruleExecInput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getExecInputAccess().getReferenceIN_REFERENCEParserRuleCall_0_0_0()); 
	    }
		lv_reference_0_0=ruleIN_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecInputRule());
	        }
       		set(
       			$current, 
       			"reference",
        		lv_reference_0_0, 
        		"IN_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExecInputAccess().getAsKeyword_0_1());
    }
(
(
		lv_wpsid_2_0=RULE_ID
		{
			newLeafNode(lv_wpsid_2_0, grammarAccess.getExecInputAccess().getWpsidIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExecInputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wpsid",
        		lv_wpsid_2_0, 
        		"ID");
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getExecInputAccess().getReferenceVAR_REFERENCEParserRuleCall_1_0_0()); 
	    }
		lv_reference_3_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecInputRule());
	        }
       		set(
       			$current, 
       			"reference",
        		lv_reference_3_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='as' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExecInputAccess().getAsKeyword_1_1());
    }
(
(
		lv_wpsid_5_0=RULE_ID
		{
			newLeafNode(lv_wpsid_5_0, grammarAccess.getExecInputAccess().getWpsidIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExecInputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wpsid",
        		lv_wpsid_5_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleExecOutput
entryRuleExecOutput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExecOutputRule()); }
	 iv_ruleExecOutput=ruleExecOutput 
	 { $current=$iv_ruleExecOutput.current; } 
	 EOF 
;

// Rule ExecOutput
ruleExecOutput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_wpsid_0_0=RULE_ID
		{
			newLeafNode(lv_wpsid_0_0, grammarAccess.getExecOutputAccess().getWpsidIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExecOutputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wpsid",
        		lv_wpsid_0_0, 
        		"ID");
	    }

)
)	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExecOutputAccess().getAsKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecOutputAccess().getReferenceOUT_REFERENCEParserRuleCall_0_2_0()); 
	    }
		lv_reference_2_0=ruleOUT_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecOutputRule());
	        }
       		set(
       			$current, 
       			"reference",
        		lv_reference_2_0, 
        		"OUT_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_wpsid_3_0=RULE_ID
		{
			newLeafNode(lv_wpsid_3_0, grammarAccess.getExecOutputAccess().getWpsidIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExecOutputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wpsid",
        		lv_wpsid_3_0, 
        		"ID");
	    }

)
)	otherlv_4='as' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExecOutputAccess().getAsKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecOutputAccess().getReferenceVAR_REFERENCEParserRuleCall_1_2_0()); 
	    }
		lv_reference_5_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecOutputRule());
	        }
       		set(
       			$current, 
       			"reference",
        		lv_reference_5_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	 iv_ruleIfStatement=ruleIfStatement 
	 { $current=$iv_ruleIfStatement.current; } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_0_0_0()); 
	    }
		lv_lefthand_1_0=ruleIN_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_1_0, 
        		"IN_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_2_0=RULE_ID
		{
			newLeafNode(lv_operator_2_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_0_2_0()); 
	    }
		lv_righthand_3_0=ruleIN_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"righthand",
        		lv_righthand_3_0, 
        		"IN_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_1_0_0()); 
	    }
		lv_lefthand_4_0=ruleIN_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_4_0, 
        		"IN_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_5_0=RULE_ID
		{
			newLeafNode(lv_operator_5_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_5_0, 
        		"ID");
	    }

)
)(
(
		lv_val_s_6_0=RULE_STRING
		{
			newLeafNode(lv_val_s_6_0, grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val_s",
        		lv_val_s_6_0, 
        		"STRING");
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandIN_REFERENCEParserRuleCall_1_2_0_0()); 
	    }
		lv_lefthand_7_0=ruleIN_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_7_0, 
        		"IN_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_8_0=RULE_ID
		{
			newLeafNode(lv_operator_8_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_8_0, 
        		"ID");
	    }

)
)(
(
		lv_val_i_9_0=RULE_INT
		{
			newLeafNode(lv_val_i_9_0, grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val_i",
        		lv_val_i_9_0, 
        		"INT");
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_3_0_0()); 
	    }
		lv_lefthand_10_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_10_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_11_0=RULE_ID
		{
			newLeafNode(lv_operator_11_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_11_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_3_2_0()); 
	    }
		lv_righthand_12_0=ruleIN_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"righthand",
        		lv_righthand_12_0, 
        		"IN_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_4_0_0()); 
	    }
		lv_lefthand_13_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_13_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_14_0=RULE_ID
		{
			newLeafNode(lv_operator_14_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_14_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getRighthandVAR_REFERENCEParserRuleCall_1_4_2_0()); 
	    }
		lv_righthand_15_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"righthand",
        		lv_righthand_15_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_5_0_0()); 
	    }
		lv_lefthand_16_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_16_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_17_0=RULE_ID
		{
			newLeafNode(lv_operator_17_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_17_0, 
        		"ID");
	    }

)
)(
(
		lv_val_s_18_0=RULE_STRING
		{
			newLeafNode(lv_val_s_18_0, grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val_s",
        		lv_val_s_18_0, 
        		"STRING");
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandVAR_REFERENCEParserRuleCall_1_6_0_0()); 
	    }
		lv_lefthand_19_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_19_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_20_0=RULE_ID
		{
			newLeafNode(lv_operator_20_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_20_0, 
        		"ID");
	    }

)
)(
(
		lv_val_i_21_0=RULE_INT
		{
			newLeafNode(lv_val_i_21_0, grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val_i",
        		lv_val_i_21_0, 
        		"INT");
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_7_0_0()); 
	    }
		lv_lefthand_22_0=ruleOUT_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_22_0, 
        		"OUT_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_23_0=RULE_ID
		{
			newLeafNode(lv_operator_23_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_23_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getRighthandIN_REFERENCEParserRuleCall_1_7_2_0()); 
	    }
		lv_righthand_24_0=ruleIN_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"righthand",
        		lv_righthand_24_0, 
        		"IN_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_8_0_0()); 
	    }
		lv_lefthand_25_0=ruleOUT_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_25_0, 
        		"OUT_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_26_0=RULE_ID
		{
			newLeafNode(lv_operator_26_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_26_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getRighthandVAR_REFERENCEParserRuleCall_1_8_2_0()); 
	    }
		lv_righthand_27_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"righthand",
        		lv_righthand_27_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_9_0_0()); 
	    }
		lv_lefthand_28_0=ruleOUT_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_28_0, 
        		"OUT_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_29_0=RULE_ID
		{
			newLeafNode(lv_operator_29_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_29_0, 
        		"ID");
	    }

)
)(
(
		lv_val_s_30_0=RULE_STRING
		{
			newLeafNode(lv_val_s_30_0, grammarAccess.getIfStatementAccess().getVal_sSTRINGTerminalRuleCall_1_9_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val_s",
        		lv_val_s_30_0, 
        		"STRING");
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getLefthandOUT_REFERENCEParserRuleCall_1_10_0_0()); 
	    }
		lv_lefthand_31_0=ruleOUT_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_31_0, 
        		"OUT_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_operator_32_0=RULE_ID
		{
			newLeafNode(lv_operator_32_0, grammarAccess.getIfStatementAccess().getOperatorIDTerminalRuleCall_1_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_32_0, 
        		"ID");
	    }

)
)(
(
		lv_val_i_33_0=RULE_INT
		{
			newLeafNode(lv_val_i_33_0, grammarAccess.getIfStatementAccess().getVal_iINTTerminalRuleCall_1_10_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val_i",
        		lv_val_i_33_0, 
        		"INT");
	    }

)
)))(
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfoperationsAssignmentParserRuleCall_2_0_0()); 
	    }
		lv_ifoperations_34_1=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		add(
       			$current, 
       			"ifoperations",
        		lv_ifoperations_34_1, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfoperationsExecuteStatementParserRuleCall_2_0_1()); 
	    }
		lv_ifoperations_34_2=ruleExecuteStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		add(
       			$current, 
       			"ifoperations",
        		lv_ifoperations_34_2, 
        		"ExecuteStatement");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*(	otherlv_35='else' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getIfStatementAccess().getElseKeyword_3_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseoperationsAssignmentParserRuleCall_3_1_0_0()); 
	    }
		lv_elseoperations_36_1=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		add(
       			$current, 
       			"elseoperations",
        		lv_elseoperations_36_1, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseoperationsExecuteStatementParserRuleCall_3_1_0_1()); 
	    }
		lv_elseoperations_36_2=ruleExecuteStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		add(
       			$current, 
       			"elseoperations",
        		lv_elseoperations_36_2, 
        		"ExecuteStatement");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*)?	otherlv_37='end' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getIfStatementAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getLefthandOUT_REFERENCEParserRuleCall_0_0_0()); 
	    }
		lv_lefthand_0_0=ruleOUT_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_0_0, 
        		"OUT_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getRighthandIN_REFERENCEParserRuleCall_0_2_0()); 
	    }
		lv_righthand_2_0=ruleIN_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"righthand",
        		lv_righthand_2_0, 
        		"IN_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getLefthandOUT_REFERENCEParserRuleCall_1_0_0()); 
	    }
		lv_lefthand_3_0=ruleOUT_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_3_0, 
        		"OUT_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getRighthandVAR_REFERENCEParserRuleCall_1_2_0()); 
	    }
		lv_righthand_5_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"righthand",
        		lv_righthand_5_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getLefthandVAR_REFERENCEParserRuleCall_2_0_0()); 
	    }
		lv_lefthand_6_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_6_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2_1());
    }
(
(
		lv_val_s_8_0=RULE_STRING
		{
			newLeafNode(lv_val_s_8_0, grammarAccess.getAssignmentAccess().getVal_sSTRINGTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val_s",
        		lv_val_s_8_0, 
        		"STRING");
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getLefthandVAR_REFERENCEParserRuleCall_3_0_0()); 
	    }
		lv_lefthand_9_0=ruleVAR_REFERENCE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"lefthand",
        		lv_lefthand_9_0, 
        		"VAR_REFERENCE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_3_1());
    }
(
(
		lv_val_i_11_0=RULE_INT
		{
			newLeafNode(lv_val_i_11_0, grammarAccess.getAssignmentAccess().getVal_iINTTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val_i",
        		lv_val_i_11_0, 
        		"INT");
	    }

)
)))
;





// Entry rule entryRuleIN_REFERENCE
entryRuleIN_REFERENCE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIN_REFERENCERule()); }
	 iv_ruleIN_REFERENCE=ruleIN_REFERENCE 
	 { $current=$iv_ruleIN_REFERENCE.current; } 
	 EOF 
;

// Rule IN_REFERENCE
ruleIN_REFERENCE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_IN_REFERENCE_HANDLE_0=RULE_IN_REFERENCE_HANDLE
    { 
    newLeafNode(this_IN_REFERENCE_HANDLE_0, grammarAccess.getIN_REFERENCEAccess().getIN_REFERENCE_HANDLETerminalRuleCall_0()); 
    }
(
(
		lv_refname_1_0=RULE_ID
		{
			newLeafNode(lv_refname_1_0, grammarAccess.getIN_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIN_REFERENCERule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"refname",
        		lv_refname_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleOUT_REFERENCE
entryRuleOUT_REFERENCE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOUT_REFERENCERule()); }
	 iv_ruleOUT_REFERENCE=ruleOUT_REFERENCE 
	 { $current=$iv_ruleOUT_REFERENCE.current; } 
	 EOF 
;

// Rule OUT_REFERENCE
ruleOUT_REFERENCE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_OUT_REFERENCE_HANDLE_0=RULE_OUT_REFERENCE_HANDLE
    { 
    newLeafNode(this_OUT_REFERENCE_HANDLE_0, grammarAccess.getOUT_REFERENCEAccess().getOUT_REFERENCE_HANDLETerminalRuleCall_0()); 
    }
(
(
		lv_refname_1_0=RULE_ID
		{
			newLeafNode(lv_refname_1_0, grammarAccess.getOUT_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOUT_REFERENCERule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"refname",
        		lv_refname_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleVAR_REFERENCE
entryRuleVAR_REFERENCE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVAR_REFERENCERule()); }
	 iv_ruleVAR_REFERENCE=ruleVAR_REFERENCE 
	 { $current=$iv_ruleVAR_REFERENCE.current; } 
	 EOF 
;

// Rule VAR_REFERENCE
ruleVAR_REFERENCE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_VAR_REFERENCE_HANDLE_0=RULE_VAR_REFERENCE_HANDLE
    { 
    newLeafNode(this_VAR_REFERENCE_HANDLE_0, grammarAccess.getVAR_REFERENCEAccess().getVAR_REFERENCE_HANDLETerminalRuleCall_0()); 
    }
(
(
		lv_refname_1_0=RULE_ID
		{
			newLeafNode(lv_refname_1_0, grammarAccess.getVAR_REFERENCEAccess().getRefnameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVAR_REFERENCERule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"refname",
        		lv_refname_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleQUALIFIEDNAME
entryRuleQUALIFIEDNAME returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQUALIFIEDNAMERule()); } 
	 iv_ruleQUALIFIEDNAME=ruleQUALIFIEDNAME 
	 { $current=$iv_ruleQUALIFIEDNAME.current.getText(); }  
	 EOF 
;

// Rule QUALIFIEDNAME
ruleQUALIFIEDNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQUALIFIEDNAMEAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQUALIFIEDNAMEAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQUALIFIEDNAMEAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQUALIFIEDID
entryRuleQUALIFIEDID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQUALIFIEDIDRule()); } 
	 iv_ruleQUALIFIEDID=ruleQUALIFIEDID 
	 { $current=$iv_ruleQUALIFIEDID.current.getText(); }  
	 EOF 
;

// Rule QUALIFIEDID
ruleQUALIFIEDID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQUALIFIEDIDAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQUALIFIEDIDAccess().getSolidusKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getQUALIFIEDIDAccess().getQUALIFIEDNAMEParserRuleCall_1_1()); 
    }
    this_QUALIFIEDNAME_2=ruleQUALIFIEDNAME    {
		$current.merge(this_QUALIFIEDNAME_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleURI
entryRuleURI returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getURIRule()); } 
	 iv_ruleURI=ruleURI 
	 { $current=$iv_ruleURI.current.getText(); }  
	 EOF 
;

// Rule URI
ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getURIAccess().getSolidusKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getURIAccess().getIDTerminalRuleCall_1()); 
    }
)*
    ;





RULE_IN_REFERENCE_HANDLE : ('in.'|'IN.');

RULE_VAR_REFERENCE_HANDLE : ('var.'|'VAR.');

RULE_OUT_REFERENCE_HANDLE : ('out.'|'OUT.');

RULE_PROTOCOL : ('http'|'https');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'-') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


